<expression> ::= <assignment_expression>
               | <expression> "," <assignment_expression>

<assignment_expression> ::= <conditional_expression>
                          | <unary_expression> <assignment_operator> <assignment_expression>

<assignment_operator> ::= "="
                        | "+="
                        | "-="
                        | "*="
                        | "/="
                        | "%="
                        | "<<="
                        | ">>="
                        | "&="
                        | "^="
                        | "|="
<conditional_expression> ::= <logical_or_expression>
                           | <logical_or_expression> "?" <expression> ":" <conditional_expression>

<logical_or_expression> ::= <logical_and_expression>
                          | <logical_or_expression> "||" <logical_and_expression>

<logical_and_expression> ::= <bitwise_expression>
                           | <logical_and_expression> "&&" <bitwise_expression>


<bitwise_expression> ::= <relational_expression>
                   | <bitwise_expression> <bitwise_operator> <relational_expression>

<bitwise_operator> ::= "|"
                    | "^"
                    | "&"

<relational_expression> ::= <shift_expression>
                          | <relational_expression> "<" <shift_expression>
                          | <relational_expression> ">" <shift_expression>
                          | <relational_expression> "<=" <shift_expression>
                          | <relational_expression> ">=" <shift_expression>
                          | <relational_expression> "==" <shift_expression>
                          | <relational_expression> "!=" <shift_expression>

<shift_expression> ::= <additive_expression>
                     | <shift_expression> "<<" <additive_expression>
                     | <shift_expression> ">>" <additive_expression>

<additive_expression> ::= <multiplicative_expression>
                        | <additive_expression> "+" <multiplicative_expression>
                        | <additive_expression> "-" <multiplicative_expression>

<multiplicative_expression> ::= <unary_expression>
                               | <multiplicative_expression> "*" <unary_expression>
                               | <multiplicative_expression> "/" <unary_expression>
                               | <multiplicative_expression> "%" <unary_expression>



<unary_expression> ::= <postfix_expression>
                     | <unary_operator> <unary_expression>

<unary_operator> ::= "&"
                   | "*"
                   | "~"

<postfix_expression> ::= <primary_expression>
                       | <primary_expression> "[" <expression> "]"
                       | <function_call>
                       | <primary_expression> "++"
                       | <primary_expression> "--"

<function_call> :: = <identifier> "(" <argument_expression_list>? ")"

<primary_expression> ::= <identifier>
                       | <constant>
                       | <string>
                       | "(" <expression> ")"

<argument_expression_list> ::= <assignment_expression>
                             | <argument_expression_list> "," <assignment_expression>

<identifier> ::= <letter_or_underscore> <rest>

<letter_or_underscore> ::= 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' | 'h' | 'i' | 'j' | 'k' | 'l' | 'm' | 'n' | 'o' | 'p' | 'q' | 'r' | 's' | 't' | 'u' | 'v' | 'w' | 'x' | 'y' | 'z' | 'A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G' | 'H' | 'I' | 'J' | 'K' | 'L' | 'M' | 'N' | 'O' | 'P' | 'Q' | 'R' | 'S' | 'T' | 'U' | 'V' | 'W' | 'X' | 'Y' | 'Z' | '_'

<rest> ::= Îµ | <rest_char> <rest>

<rest_char> ::= 'a' | 'b' | 'c' | 'd' | 'e' | 'f' | 'g' | 'h' | 'i' | 'j' | 'k' | 'l' | 'm' | 'n' | 'o' | 'p' | 'q' | 'r' | 's' | 't' | 'u' | 'v' | 'w' | 'x' | 'y' | 'z' | 'A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G' | 'H' | 'I' | 'J' | 'K' | 'L' | 'M' | 'N' | 'O' | 'P' | 'Q' | 'R' | 'S' | 'T' | 'U' | 'V' | 'W' | 'X' | 'Y' | 'Z' | '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '_'

<constant> ::= <number> | <number> <constant>

<number> ::= '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9'

<string> ::= '"' [^"\n]* '"'